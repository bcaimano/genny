SchemaVersion: 2018-07-01
Owner: "@mongodb/service-architecture"

Clients:
  Default:
    QueryOptions:
      maxPoolSize: 1000
      socketTimeoutMS: 5000
      connectTimeoutMS: 5000
Actors:
- Name: StepdownCommand
  # See https://jira.mongodb.org/browse/TIG-1322 for what Type this should be eventually
  Type: AdminCommand
  Threads: 1
  Phases:
  - Phase: 0  # Load
    Nop: true
  - Phase: 1  # Initial Stepdown
    Repeat: 1
    SleepAfter: 60 seconds
    ThrowOnFailure: false
    Operation:
      OperationMetricsName: InitialStepdown
      OperationName: AdminCommand
      #OperationAwaitStepdown: true
      OperationCommand:
        replSetStepDown: 180 # Prevent the node from being primary for the rest of the test
        force: true # Make sure the node actually does step down
  - Phase: 2  # Run
    Repeat: 1
    SleepBefore: 60 seconds
    # An exception is expected because the replSetStepDown command either returns failure
    # or disconnects its client session. That said, any other failure we did not expect would still
    # be caught.
    ThrowOnFailure: false
    Operation:
      OperationMetricsName: InterruptStepdown
      OperationName: AdminCommand
      #OperationAwaitStepdown: true
      OperationCommand:
        replSetStepDown: 180 # Prevent the node from being primary for the rest of the test
        force: true # Make sure the node actually does step down

- Name: PrimaryRequiredRead
  Type: RunCommand
  Threads: 10
  Phases:
  - Phase: 0  # Load
    Nop: true
  - Phase: 1  # Stepdown
    Nop: true
  - Phase: 2  # Run
    Duration: 120 seconds
    GlobalRate: 1 per 100 microsecond
    Database: test
    # We want to continue to send our find commands in any situation.
    # However, failures before replSetStepDown indicate that something was wrong with the test.
    # Ideally, post-workload analysis will show if any find failure happens before replSetStepdown.
    ThrowOnFailure: false
    Operation: &find_one
      OperationMetricsName: "Find"
      OperationName: RunCommand
      OperationIsQuiet: true
      OperationCommand:
        find: Collection0
        filter:
            t: {^RandomInt: {min: 0, max: 1000}}
        readConcern: {level: local}
        $readPreference: {mode: primary}

- Name: Loader
  Type: Loader
  Threads: 1
  Phases:
  - Phase: 0  # Load
    Database: test
    CollectionCount: 1
    DocumentCount: 10000
    BatchSize: 100
    Threads: 1
    Document:
      t: {^RandomInt: {min: 0, max: 1000}}
    Indexes:
    - keys: {t: 1}
    Repeat: 1
  - Phase: 1  # Initial Stepdown
    Nop: true
  - Phase: 2  # Run
    Nop: true

AutoRun:
  Requires:
    bootstrap:
      mongodb_setup: 
        - replica
        - replica-noflowcontrol
